name: Docker Build and Push

on:
  push:
    branches:
      - staging  # Replace with the branch name you want to trigger the action on

env:
  IMAGE_NAME: yanlin123/nginx-demo # Replace with your Docker image name (e.g., myusername/myimage)

permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write
  actions: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Replace with your Docker Hub username or registry username
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Replace with your Docker Hub password or registry token

      - name: Get Short SHA
        id: get_sha
        run: echo ::set-output name=SHA_SHORT::${GITHUB_SHA::8}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./nginx-demo/Dockerfile  # Path to the directory containing your Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ steps.get_sha.outputs.SHA_SHORT }}

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Update Deployment YAML
        id: update-deployment-image
        run: |
          yq e '.spec.template.spec.containers[0].image = "${{ env.IMAGE_NAME }}:${{ steps.get_sha.outputs.SHA_SHORT }}"' -i 02-deployment.yaml
        working-directory: nginx-demo

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.AUTH_TOKEN }}
          commit-message: "update deployment image tag"
          title: "Update deployment image tag"
          body: This PR is auto created by GitHub Action
          branch: update-tag
          base: main
          branch-suffix: random
          delete-branch: true
          labels: |
            automated-pr

       # Sleep for some seconds to ensure the successes of the next 2 steps
       - name: Sleep for 1-5 seconds
         run: |
           sleep $(( $RANDOM % 5 + 1 ))

      # - name: Enable Pull Request Automerge
      #   if: steps.cpr.outputs.pull-request-operation == 'created'
      #   uses: peter-evans/enable-pull-request-automerge@v2
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
      #     merge-method: squash